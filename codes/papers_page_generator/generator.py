author_file = "authors.txt"
paper_file = "papers.txt"
outfile = open("../../_pages/papers.md", "w")

def get_lines(filepath):
	with open(filepath, 'r') as f:
		L = f.readlines()
	return [s.rstrip() for s in L]

def file_to_dict(filepath):
	L = get_lines(filepath)
	d = {}
	current = None
	start_new = True

	for i in range(len(L)):
		if start_new:
			current = L[i]
			d[current] = {}
			start_new = False
			continue

		if len(L[i]) > 0 and L[i][0] == "=":
			start_new = True
			if current == "ignore":
				del d[current]
			continue

		s = L[i]
		key, value = s.split(":", 1)
		key = key.strip()
		value = value.strip()

		d[current][key] = value
	return d

def add_newline(s):
	return s + " " * 2 + "\n"

authors = file_to_dict(author_file)
papers = file_to_dict(paper_file)

preamble = r"""---
layout: archive
title: "Papers"
permalink: /papers/
author_profile: true
---

Here are my preprints, listed in (reverse chronological) order of first upload to arXiv (recentmost first).
<!-- generated by /math/codes/papers_page_generator/generator.py -->
"""

def printt(*args):
	print(*args, file=outfile)
	outfile.flush()

printt(preamble)
N = len(papers)
for _, paper in papers.items():
	s = f"{N}\\. "
	N -= 1

	s += f"<i>{paper['title']}</i>"
	if "coauthors" in paper:
		coauthors = paper['coauthors'].split(",")
		coauthors = [authors[c.strip()]['name'] for c in coauthors]
		if len(coauthors) > 1:
			coauthors[-1] = f"and {coauthors[-1]}"
		if len(coauthors) == 2:
			coauthors = f"{coauthors[0]} {coauthors[1]}"
		else:
			coauthors = ", ".join(coauthors)
		s += f", with {coauthors}"

	if 'pdf' in paper:
		s = add_newline(s)
		s += f"[PDF]({paper['pdf']}.pdf)"

	if 'arxiv' in paper:
		s = add_newline(s)
		ax = paper['arxiv']
		s += f"arXiv: [{ax}](https://arxiv.org/abs/{ax})"

	s += "\n"
	printt(s)